library(blogdown)
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
servr::daemon_stop(.)
servr::daemon_stop()
serve_site()
servr::daemon_stop(7)
servr::daemon_stop(1)
servr::daemon_stop(2)
servr::daemon_stop(3)
servr::daemon_stop(4)
servr::daemon_stop()
servr::daemon_stop(7)
servr::daemon_stop(5)
servr::daemon_stop()
serve_site()
servr::daemon_stop(8)
serve_site()
servr::daemon_stop(9)
serve_site()
servr::daemon_stop(10)
serve_site()
serve_site()
servr::daemon_stop(10)
servr::daemon_stop()
servr::daemon_stop(10)
serve_site()
servr::daemon_stop(11)
serve_site()
library(blogdown)
?serve_site
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
stop_server()
?stop_server
serve_site()
serve_site()
serve_site()
?stop_server
stop_server()
serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown:::new_post_addin()
install.packages("tidyverse")
install.packages(""cronR)
install.packages("cronR")
library(cronR)
install.packages("taskscheduleR")
library(taskscheduleR)
install.packages("miniUI")
install.packages("shiny")
install.packages("shinyFiles")
taskscheduleR:::taskschedulerAddin()
library(bookdown)
library(blogdown)
blogdown::build_site()
git commit
#these libraries need to be loaded
library(utils)
#read the Dataset sheet into “R”. The dataset will be called "data".
ECDC.COVID19 <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")
library(tidyverse)
ECDC.COVID19$dateRep <- as.Date(ECDC.COVID19$dateRep, format = "%d/%m/%Y")
ECDC.COVID19.PH <- ECDC.COVID19 %>%
# filter(geoId %in% c("PH","SE","IS","FI","DE","TW")) %>%
filter(geoId %in% c("PH")) %>%
arrange(geoId,dateRep) %>%
group_by(geoId) %>%
mutate(cum_cases = cumsum(cases),
cum_deaths= cumsum(deaths)) %>%
mutate(fatality_rate = cum_deaths/cum_cases*100,
cases_rate = cum_cases/popData2018*1000000)
library(ggthemes)
p1 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cum_cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "Cumulative Cases Per Day", title = "COVID-19 CUMULATIVE CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
p2 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "New Cases Per Day", title = "COVID-19 NEW CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
library(plotly)
par(mfrow=c(2,1))
ggplotly(p1)
ggplotly(p2)
par(mfrow=c(1,1))
library(cowplot)
library(plotly)
plot_grid(p1,p2,labels = "AUTO")
#these libraries need to be loaded
library(utils)
#read the Dataset sheet into “R”. The dataset will be called "data".
ECDC.COVID19 <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")
library(tidyverse)
ECDC.COVID19$dateRep <- as.Date(ECDC.COVID19$dateRep, format = "%d/%m/%Y")
ECDC.COVID19.PH <- ECDC.COVID19 %>%
# filter(geoId %in% c("PH","SE","IS","FI","DE","TW")) %>%
filter(geoId %in% c("PH")) %>%
arrange(geoId,dateRep) %>%
group_by(geoId) %>%
mutate(cum_cases = cumsum(cases),
cum_deaths= cumsum(deaths)) %>%
mutate(fatality_rate = cum_deaths/cum_cases*100,
cases_rate = cum_cases/popData2018*1000000)
library(ggthemes)
p1 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cum_cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "Cumulative Cases Per Day", title = "COVID-19 CUMULATIVE CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
p2 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "New Cases Per Day", title = "COVID-19 NEW CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
library(plotly)
par(mfrow=c(2,1))
ggplotly(p1)
ggplotly(p2)
par(mfrow=c(1,1))
library(cowplot)
library(plotly)
plot_grid(p1,p2,labels = "AUTO")
#these libraries need to be loaded
library(utils)
#read the Dataset sheet into “R”. The dataset will be called "data".
ECDC.COVID19 <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")
library(tidyverse)
ECDC.COVID19$dateRep <- as.Date(ECDC.COVID19$dateRep, format = "%d/%m/%Y")
ECDC.COVID19.PH <- ECDC.COVID19 %>%
# filter(geoId %in% c("PH","SE","IS","FI","DE","TW")) %>%
filter(geoId %in% c("PH","SG","ID","MY","TH")) %>%
arrange(geoId,dateRep) %>%
group_by(geoId) %>%
mutate(cum_cases = cumsum(cases),
cum_deaths= cumsum(deaths)) %>%
mutate(fatality_rate = cum_deaths/cum_cases*100,
cases_rate = cum_cases/popData2018*1000000)
library(ggthemes)
p1 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cum_cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "Cumulative Cases Per Day", title = "COVID-19 CUMULATIVE CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
p2 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "New Cases Per Day", title = "COVID-19 NEW CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
library(plotly)
par(mfrow=c(2,1))
ggplotly(p1)
ggplotly(p2)
par(mfrow=c(1,1))
library(cowplot)
library(plotly)
plot_grid(p1,p2,labels = "AUTO")
library(blogdown)
blogdown::serve_site()
#these libraries need to be loaded
library(utils)
#read the Dataset sheet into “R”. The dataset will be called "data".
ECDC.COVID19 <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")
library(tidyverse)
ECDC.COVID19$dateRep <- as.Date(ECDC.COVID19$dateRep, format = "%d/%m/%Y")
ECDC.COVID19.PH <- ECDC.COVID19 %>%
# filter(geoId %in% c("PH","SE","IS","FI","DE","TW")) %>%
filter(geoId %in% c("PH","SG","ID","MY","TH")) %>%
arrange(geoId,dateRep) %>%
group_by(geoId) %>%
mutate(cum_cases = cumsum(cases),
cum_deaths= cumsum(deaths)) %>%
mutate(fatality_rate = cum_deaths/cum_cases*100,
cases_rate = cum_cases/popData2018*1000000)
library(ggthemes)
p1 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cum_cases, fill = geoId, colour = geoId) +
#facet_wrap(vars(geoId)) +
geom_line(size=0.5) +
#geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "Cumulative Cases Per Day", title = "COVID-19 CUMULATIVE CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
p2 <- ggplot(ECDC.COVID19.PH) +
aes(x = dateRep, y = cases, fill = geoId, colour = geoId) +
geom_line(size = 1L) +
geom_smooth(span = 0.5) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Date", y = "New Cases Per Day", title = "COVID-19 NEW CASES PER DAY - PHILIPPINES",
subtitle = "As of 2020-Apr-18", caption = "Data Source: European Centre for Disease Prevention and Control (ECDC)") +
theme_minimal() +
theme_pander(bc="honeydew")
library(plotly)
par(mfrow=c(2,1))
ggplotly(p1)
ggplotly(p2)
par(mfrow=c(1,1))
library(cowplot)
library(plotly)
plot_grid(p1,p2,labels = "AUTO")
blogdown:::serve_site()
library(plotly)
par(mfrow=c(2,1))
ggplotly(p1)
ggplotly(p2)
daemon_stop(2)
